{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,IAAuBC,EAAUC,EAHpBC,SAASC,cAAc,QAC/BC,iBAAiB,UA2BtB,SAAoBC,GAClBA,EAAMC,iBACJC,QAAQC,IAAI,oB,KA3BOR,EAeT,EAfmBC,EAehB,KAdR,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,aAAY,KACNH,EACFF,EAAQ,C,SAAEV,E,MAAUC,IAEpBU,EAAO,C,SAAEX,E,MAAUC,GAAQ,GAE7B,KAMLe,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBM,QAAQC,IAAI,uBAAqBR,QAAiBC,OAClDgB,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,MAAU,IAEzEmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBM,QAAQC,IAAI,sBAAoBR,QAAiBC,OACjDgB,EAAAnB,GAASoB,OAAOG,QAAQ,sBAAoBrB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n      setInterval(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      });\n  });\n};\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nfunction submitForm(event) {\n  event.preventDefault();\n    console.log(\"submitForm active\");\n  }"],"names":["$eWCmQ","parcelRequire","position","delay","document","querySelector","addEventListener","event","preventDefault","console","log","Promise","resolve","reject","shouldResolve","Math","random","setInterval","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7914f163.js.map"}