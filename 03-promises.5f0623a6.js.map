{"mappings":"iiBAAA,IAKuBA,EAAUC,EALjCC,EAAAC,EAAA,SAEaC,SAASC,cAAc,QAC/BC,iBAAiB,UA2BtB,SAAoBC,GAClBA,EAAMC,iBACJC,QAAQC,IAAI,oB,KA3BOV,EAeT,EAfmBC,EAehB,KAdR,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,aAAY,WACNH,EACFF,EAAQ,CAAEZ,WAAUC,UAEpBY,EAAO,CAAEb,WAAUC,S,QAQ1BiB,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBQ,QAAQC,IAAI,uBAAwCU,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,OAC1DoB,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAwCH,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBQ,QAAQC,IAAI,sBAAuCU,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,OACzDoB,EAAAnB,GAASoB,OAAOG,QAAQ,sBAAqCL,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n      setInterval(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      });\n  });\n};\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nfunction submitForm(event) {\n  event.preventDefault();\n    console.log(\"submitForm active\");\n  }"],"names":["position","delay","$iU1Pc","parcelRequire","document","querySelector","addEventListener","event","preventDefault","console","log","Promise","resolve","reject","shouldResolve","Math","random","setInterval","then","param","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5f0623a6.js.map"}