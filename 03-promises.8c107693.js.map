{"mappings":"qhBAMA,IAAAA,EAAAC,EAAA,SAYA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EApBf,CAAEQ,KAAMC,SAASC,cAAc,QAC7BV,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAASH,SAASC,cAAc,qBAG7BF,KAAKK,iBAAiB,UAqC3B,SAAoBC,GAClBA,EAAMC,iBAEN,MAAMf,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,GAAWE,EAAME,OAChCC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOP,EAAKQ,OACxBE,EAAcH,OAAON,EAAOO,OAClCG,QAAQC,IAAM,cAAcN,EAAW,aAAcG,EAAU,eAAeC,GA3BhF,SAAuBG,EAAOb,EAAMC,GAElCL,YAAW,KACT,IAAK,IAAIkB,EAAI,EAAGA,EAAIb,EAAQa,GAAK,EAAG,CAClC,IAAIC,EAAYF,EAAQb,EAAOc,EAC/BH,QAAQC,IAAI,YAAaG,GAEzB5B,EADiB2B,EAAI,EACGC,GACrBC,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBsB,QAAQC,IAAI,uBAAqBxB,QAAiBC,OAClD4B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqB/B,QAAiBC,MAAU,IAEzE+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClBsB,QAAQC,IAAI,sBAAoBxB,QAAiBC,OACjD4B,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBjC,QAAiBC,MAAU,G,IAG5EwB,E,CAawBS,CAAdhB,EAAYG,EAAWC,E","sources":["src/js/03-promises.js"],"sourcesContent":["//Напиши скрипт, который при сабмите формы вызывает функцию \n//createPromise(position, delay) столько раз, сколько ввели \n//в поле amount.При каждом вызове передай ей номер создаваемого \n//промиса(position) и задержку учитывая введенную пользователем\n// первую задержку(delay) и шаг(step).\n\nimport Notiflix from 'notiflix';\n\nconst refs =\n{ form: document.querySelector('form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount:  document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', submitForm);\n\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n  });\n};\nfunction countPromise( delay, step, amount) {\n// console.log(\"countPromise\");\n  setTimeout(() => {\n    for (let i = 0; i < amount; i += 1) {\n      let timeDelay = delay + step * i;\n      console.log(\"timeDelay\", timeDelay);\n      const position = i + 1;\n      createPromise(position, timeDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }, delay);\n};\n\nfunction submitForm(event) {\n  event.preventDefault();\n  // console.log(\"submitForm active\");\n  const { delay, step, amount } = event.target;\n  const inputDelay = Number(delay.value); \n  const inputStep = Number(step.value);\n  const inputAmount = Number(amount.value);\n  console.log ( 'inputDelay:',inputDelay,'inputStep:', inputStep,'inputAmount:',inputAmount);\n  \n  //кількість промісів які визвемо\n  countPromise(inputDelay, inputStep, inputAmount);\n}\n\n\n/*\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n*/"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","step","amount","addEventListener","event","preventDefault","target","inputDelay","Number","value","inputStep","inputAmount","console","log","delay1","i","timeDelay","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$countPromise"],"version":3,"file":"03-promises.8c107693.js.map"}